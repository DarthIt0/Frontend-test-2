{"ast":null,"code":"var _jsxFileName = \"/home/quasar-dev/Downloads/frontend-test-luine/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Step1 from \"./Pages/Step1\";\nimport Step2 from \"./Pages/Step2\";\nimport Step3 from \"./Pages/Step3\";\nimport Review from \"./Pages/Review\";\nimport Data from './Data/dishes.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = Data.dishes;\nconst App = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedPeople, setSelectedPeople] = useState(0);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [selectedPlace, setSelectedPlace] = useState(\"\");\n  const [selectedDishes, setSelectedDishes] = useState({});\n  const handleCategorySelection = category => {\n    setSelectedCategory(category);\n    setSelectedDishes({});\n  };\n  const handlePeopleSelection = people => {\n    setSelectedPeople(people);\n  };\n  const handlePageSelection = page => {\n    setSelectedPage(page);\n  };\n  const handlePlaceSelection = place => {\n    setSelectedPlace(place);\n    setSelectedDishes({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedPage === 1 && /*#__PURE__*/_jsxDEV(Step1, {\n      category: selectedCategory,\n      setCategory: handleCategorySelection,\n      people: selectedPeople,\n      setPeople: handlePeopleSelection,\n      setPage: handlePageSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), selectedPage === 2 && /*#__PURE__*/_jsxDEV(Step2, {\n      category: selectedCategory,\n      setPage: handlePageSelection,\n      place: selectedPlace,\n      setPlace: handlePlaceSelection,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), selectedPage === 3 && /*#__PURE__*/_jsxDEV(Step3, {\n      category: selectedCategory,\n      people: selectedPeople,\n      setPage: handlePageSelection,\n      place: selectedPlace,\n      selectedDishes: selectedDishes,\n      setSelectedDishes: setSelectedDishes,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), selectedPage === 4 && /*#__PURE__*/_jsxDEV(Review, {\n      category: selectedCategory,\n      setCategory: handleCategorySelection,\n      people: selectedPeople,\n      setPeople: handlePeopleSelection,\n      setPage: handlePageSelection,\n      place: selectedPlace,\n      setPlace: handlePlaceSelection,\n      selectedDishes: selectedDishes,\n      setSelectedDishes: setSelectedDishes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6/spp09039KCa3mKPFeIctJ+PTw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Step1","Step2","Step3","Review","Data","options","dishes","App","selectedCategory","setSelectedCategory","selectedPeople","setSelectedPeople","selectedPage","setSelectedPage","selectedPlace","setSelectedPlace","selectedDishes","setSelectedDishes","handleCategorySelection","category","handlePeopleSelection","people","handlePageSelection","page","handlePlaceSelection","place"],"sources":["/home/quasar-dev/Downloads/frontend-test-luine/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Step1 from \"./Pages/Step1\";\nimport Step2 from \"./Pages/Step2\";\nimport Step3 from \"./Pages/Step3\";\nimport Review from \"./Pages/Review\";\nimport Data from './Data/dishes.json';\n\nconst options = Data.dishes;\n\nconst App: React.FC = () => {\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [selectedPeople, setSelectedPeople] = useState<number>(0);\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n  const [selectedPlace, setSelectedPlace] = useState<string>(\"\");\n  const [selectedDishes, setSelectedDishes] = useState({});\n  \n  const handleCategorySelection = (category: string) => {\n    setSelectedCategory(category);\n    setSelectedDishes({});\n  };\n  \n  const handlePeopleSelection = (people: number) => {\n    setSelectedPeople(people);\n  };\n  \n  const handlePageSelection = (page: number) => {\n    setSelectedPage(page);\n  };\n  \n  const handlePlaceSelection = (place: string) => {\n    setSelectedPlace(place);\n    setSelectedDishes({});\n  };\n\n  return (\n    <div>\n      {selectedPage === 1 && (\n        <Step1\n          category={selectedCategory}\n          setCategory={handleCategorySelection}\n          people={selectedPeople}\n          setPeople={handlePeopleSelection}\n          setPage={handlePageSelection}\n        />\n      )}\n      {selectedPage === 2 && (\n        <Step2\n          category={selectedCategory}\n          setPage={handlePageSelection}\n          place={selectedPlace}\n          setPlace={handlePlaceSelection} \n          options={options} \n        />\n      )}\n      {selectedPage === 3 && (\n        <Step3\n          category={selectedCategory}\n          people={selectedPeople}\n          setPage={handlePageSelection}\n          place={selectedPlace}\n          selectedDishes={selectedDishes}\n          setSelectedDishes={setSelectedDishes}\n          options={options}\n        />\n      )}\n      {selectedPage === 4 && (\n        <Review\n          category={selectedCategory}\n          setCategory={handleCategorySelection}\n          people={selectedPeople}\n          setPeople={handlePeopleSelection}\n          setPage={handlePageSelection}\n          place={selectedPlace}\n          setPlace={handlePlaceSelection}\n          selectedDishes={selectedDishes}\n          setSelectedDishes={setSelectedDishes}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AAAC;AAEtC,MAAMC,OAAO,GAAGD,IAAI,CAACE,MAAM;AAE3B,MAAMC,GAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAS,CAAC,CAAC;EAC/D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAS,CAAC,CAAC;EAC3D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExD,MAAMmB,uBAAuB,GAAIC,QAAgB,IAAK;IACpDV,mBAAmB,CAACU,QAAQ,CAAC;IAC7BF,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMG,qBAAqB,GAAIC,MAAc,IAAK;IAChDV,iBAAiB,CAACU,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,mBAAmB,GAAIC,IAAY,IAAK;IAC5CV,eAAe,CAACU,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,oBAAoB,GAAIC,KAAa,IAAK;IAC9CV,gBAAgB,CAACU,KAAK,CAAC;IACvBR,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACE;IAAA,WACGL,YAAY,KAAK,CAAC,iBACjB,QAAC,KAAK;MACJ,QAAQ,EAAEJ,gBAAiB;MAC3B,WAAW,EAAEU,uBAAwB;MACrC,MAAM,EAAER,cAAe;MACvB,SAAS,EAAEU,qBAAsB;MACjC,OAAO,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAEhC,EACAV,YAAY,KAAK,CAAC,iBACjB,QAAC,KAAK;MACJ,QAAQ,EAAEJ,gBAAiB;MAC3B,OAAO,EAAEc,mBAAoB;MAC7B,KAAK,EAAER,aAAc;MACrB,QAAQ,EAAEU,oBAAqB;MAC/B,OAAO,EAAEnB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEpB,EACAO,YAAY,KAAK,CAAC,iBACjB,QAAC,KAAK;MACJ,QAAQ,EAAEJ,gBAAiB;MAC3B,MAAM,EAAEE,cAAe;MACvB,OAAO,EAAEY,mBAAoB;MAC7B,KAAK,EAAER,aAAc;MACrB,cAAc,EAAEE,cAAe;MAC/B,iBAAiB,EAAEC,iBAAkB;MACrC,OAAO,EAAEZ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAEpB,EACAO,YAAY,KAAK,CAAC,iBACjB,QAAC,MAAM;MACL,QAAQ,EAAEJ,gBAAiB;MAC3B,WAAW,EAAEU,uBAAwB;MACrC,MAAM,EAAER,cAAe;MACvB,SAAS,EAAEU,qBAAsB;MACjC,OAAO,EAAEE,mBAAoB;MAC7B,KAAK,EAAER,aAAc;MACrB,QAAQ,EAAEU,oBAAqB;MAC/B,cAAc,EAAER,cAAe;MAC/B,iBAAiB,EAAEC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAExC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAvEIV,GAAa;AAAA,KAAbA,GAAa;AAyEnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}